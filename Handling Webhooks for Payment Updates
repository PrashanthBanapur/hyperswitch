const express = require('express');
const crypto = require('crypto');

const app = express();
app.use(express.json());

// Replace with your HyperSwitch webhook secret
const WEBHOOK_SECRET = process.env.HYPERSWITCH_WEBHOOK_SECRET;

// Verify webhook signature
function verifySignature(req) {
    const signature = req.headers['x-hyperswitch-signature'];
    const payload = JSON.stringify(req.body);
    const hash = crypto.createHmac('sha256', WEBHOOK_SECRET)
                       .update(payload)
                       .digest('hex');
    return hash === signature;
}

// Webhook endpoint
app.post('/webhook/payment', (req, res) => {
    if (!verifySignature(req)) {
        console.log('Webhook signature mismatch!');
        return res.status(400).send('Invalid signature');
    }

    const event = req.body;
    console.log('Received webhook event:', event);

    switch(event.type) {
        case 'payment.succeeded':
            console.log(`Payment ${event.data.id} succeeded!`);
            // Update your DB or trigger business logic
            break;
        case 'payment.failed':
            console.log(`Payment ${event.data.id} failed.`);
            break;
        default:
            console.log('Unhandled event type:', event.type);
    }

    res.status(200).send('Webhook received');
});

app.listen(3000, () => {
    console.log('Webhook listener running on port 3000');
});
